# name: Flutter CI/CD

# on: 
#   push:
#     tags:
#     - 'v*.*.*'
    
# jobs:
#   build:
#     runs-on: macos-latest
#     steps:

#     - name: Set env
#       run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
#     - name: Test
#       run: |
#         echo $RELEASE_VERSION
#         echo ${{ env.RELEASE_VERSION }}
    
#     - name: Checkout repository
#       uses: actions/checkout@v1
#     - name: Set up Java
#       uses: actions/setup-java@v2
#       with:
#           java-version: '15'
#           distribution: 'adopt'
    
#     - name: Set up Flutter
#       uses: subosito/flutter-action@v1
#       with:
#         channel: 'stable'
        
#     - name: Install pub Dependencies
#       run: flutter pub get
    
#     - name: Check for any formatting issues
#       run: flutter format --set-exit-if-changed .
    
#     - name: Statically analyze the Dart code for any errors
#       run: flutter analyze .
    
#     - name: Run Tests
#       run: flutter test
    
#     - name: Build Android App
#       run: flutter build apk --release
    
#     - name: Build iOS App
#       run: |
#         flutter build ios --no-codesign
#         cd build/ios/iphoneos
#         mkdir Payload
#         cd Payload
#         ln -s ../Runner.app
#         cd ..
#         zip -r app.ipa Payload

#     - name: Copy Files
#       run: |
#         mkdir ${{ env.RELEASE_VERSION }}
#         cp build/app/outputs/apk/release/app-release.apk /${{ env.RELEASE_VERSION }}.apk
#         cp build/ios/iphoneos/app.ipa /${{ env.RELEASE_VERSION }}.ipa

#     - name: Release Apps
#       uses: ncipollo/release-action@v1
#       with:
#         artifacts: "build/app/outputs/apk/release/app-release.apk,build/ios/iphoneos/app.ipa"
#         token: ${{ secrets.GITHUB_TOKEN }}